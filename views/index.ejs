<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
	<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" rel="stylesheet" integrity="sha256-MfvZlkHCEqatNoGiOXveE8FIwMzZg4W85qfrfIFBfYc= sha512-dTfge/zgoMYpP7QbHy4gWMEGsbsdZeCXz7irItjcC3sPUFtf0kuFbDz/ixG7ArTxmDjLXDmezHubeNikyKGVyQ==" crossorigin="anonymous">
    <meta charset="utf-8">
    <style>

    text {
        font: 10px sans-serif;
    }

    </style>
    <script type="text/javascript" src="//d3js.org/d3.v3.min.js"></script>
</head>
<body>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js" integrity="sha256-Sk3nkD6mLTMOF0EOpNtsIry+s1CsaqQC1rVLTAy+0yc= sha512-K1qjQ+NcF2TYO/eI3M6v8EiNYZfA95pQumfvcVrTHtwQVDG+aHRqLi/ETn2uB+1JqwYqVG3LIvdm9lj6imS/pQ==" crossorigin="anonymous"></script>
	<img src="../images/logo.png" alt="#realtime" style="width:350px;height:66px;">

	<div style = "padding: 30px 400px 0px 63px;">
   
	   <form class = "bs-example bs-example-form" role = "form" method="post" action="/">
	      <div class = "input-group">
	         <span class = "input-group-addon">#</span>
	         <input type = "text" class = "form-control" placeholder = "hashtag" name="hashtag">
	      </div>
	   </form>
	</div>

       
    <% if (typeof hashtags != 'undefined') { %>

    <h1><%= title %></h1>
    <p>#<%= search %></p>
        <p> <%= hashtags %></p>
    <div id="viz"></div>
    <script>

    var diameter = 960,
    format = d3.format(",d"),
    color = d3.scale.category20c();

    var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(10);

    var svg = d3.select("body").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");

    d3.json("http://localhost:3000/flare2.json", function(error, root) {
      if (error) throw error;

      var node = svg.selectAll(".node")
      .data(bubble.nodes(classes(root))
          .filter(function(d) { return !d.children; }))
      .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

      node.append("title")
      .text(function(d) { return d.className + ": " + format(d.value); });

      node.append("circle")
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return color(d.packageName); });

      node.append("text")
      .attr("dy", ".3em")
      .style("text-anchor", "middle")
      .text(function(d) { return d.className.substring(0, d.r / 3); });
  });

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
  var classes = [];

  function recurse(name, node) {
    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
    else classes.push({packageName: name, className: node.name, value: node.size});
}

recurse(null, root);
return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");

</script>
<% } %>
</body>
</html>
