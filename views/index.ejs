<!DOCTYPE html>
<html xmlns:xlink="http://www.w3.org/1999/xlink">
<head>
	<meta charset="utf-8">

	<title><%= title %></title>
	<link href="css/bootstrap.min.css" rel="stylesheet">
	<style>

	text {
		font: 10px sans-serif;
	}

	</style>
	<script type="text/javascript" src="//d3js.org/d3.v3.min.js"></script>
</head>
<body>

	<form method="post" action="/">
		<input type="text" name="hashtag">
		<input type="submit">
	</form>
	<% if (typeof hashtags != 'undefined') { %>

	<h1>#<%= search %></h1>
	<div id="viz"></div>
	<script>

	var diameter = 960,
	format = d3.format(",d"),
	color = d3.scale.category20c();

	var bubble = d3.layout.pack()
	.sort(null)
	.size([diameter, diameter])
	.padding(1.5);

	var svg = d3.select("body").append("svg")
	.attr("width", diameter)
	.attr("height", diameter)
	.attr("class", "bubble");

	d3.json("http://localhost:3000/flare2.json", function(error, root) 
	{
		if (error) throw error;

		var node = svg.selectAll(".node")
		.data(bubble.nodes(classes(root))
			.filter(function(d) { return !d.children; }))
		.enter().append("g")
		.attr("class", "node")
		.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });


		node.append("circle")
		.attr("r", function(d) { return d.r; })
		.style("fill", function(d) { return color(d.packageName); })

		node.append("a")
		.attr("xlink:href", function(d) {return "http://twitter.com/hashtag/"+ d.className})
		.append("text")
		.attr("dy", ".3em")
		.style("text-anchor", "middle")
		.text(function(d) { return d.className.substring(0, d.r / 3); });

	});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
	var classes = [];

	function recurse(name, node) {
		if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
		else classes.push({packageName: name, className: node.name, value: node.size});
	}

	recurse(null, root);
	return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");

</script>
<% } %>
</body>
</html>
